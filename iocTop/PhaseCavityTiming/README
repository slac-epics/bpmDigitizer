EPICS IOC for the Femtosecond Phase Cavity Timing Project
=================================================================

Setup and configuration of the software is described in
the startup script 'st.cmd'.   Typically, each device will
need a call to create and/or configure it, and a call to
load it's database records, dbLoadRecords().

This file lists the relevant PVs and their semantics.
Note: The following device names are assigned by
the 'dbLoadRecords()' commands in the startup script, and
could differ from those in this README file if not kept uptodate.

DeviceName		Description
dig1			SLAC BPM Waveform Digitizer
ai0				Acromag IP330AE   Analog  Input  Card 
ao0				Acromag IP231-16E Analog  Output Card 
di0				Acromag IP440AE   Digital Input  Card 
do0				Acromag IP445E	  Digital Output Card 

An EDM panel displaying all these PVs is available and can be
started with the command:

  edm -x -m "digi=dig1" phaseCavity.edl

PV Name:		Type:		Description:
------------------------------------------

dig1:ARM		enum/menu	Controls the digitizer trigger mode.
							The following values can be written:

							  'Disarm'	(numerical: 0):
									Digitizer disarmed, not responding to
									triggers.

							  'Arm-Once' (numerical: 1):
									Digitizer armed. Data will be acquired
									when the next external trigger occurs.
									After the acquisition the software
									switches into 'Disarm' state holding
									the acquired data.

							  'Arm-Auto' (numerical: 2):
									Digitizer armed. Data will be acquired
									when the next external trigger occurs.
									After the acquisition the digitizer is
									automatically rearmed for the next
									acquisition (and therefore data of the
									first one may be overwritten).

							  'SW-Trig'  (numerical: 3):
									Start an acquisition immediately. 
									After the acquisition the software
									switches into 'Disarm' state holding
									the acquired data.

dig1:CLK		enum/menu	Selects the digitizer clock source.
							The following values can be written:

								'Internal' (numerical: 0):
									Use internal 120MHz clock.

								'External' (numerical: 1):
									Use external clock.

dig1:WAV		waveform	Array of sampled data in row-major layout
				of shorts.  (channel0-sample0, channel0-sample1, ...,
							 channel1-sample0, channel1-sample1, ...)

							The number of samples cannot be changed
							dynamically but is defined in the startup
							script.

							NOTE: The channel-access client (e.g., EDM)
							may request that the IOC convert the data
							to 'double' -- the EPICS_CA_MAX_ARRAY_BYTES
							environment variable must be set big enough
							on both, the IOC and the client!

dig1:WAV.NELM	integer		Number of samples (total, i.e., a multiple
							of 4, the number of channels).

dig1:WAV.NORD	integer		Number of samples acquired. Reset to 0 when
							the digitizer is armed (and after boot) and
							set to NELM after an acquisition.

dig1:S_N		integer		Serial Number of the board.

dig1:REV		integer		Firmware Revision of the board.

dig1:DWG		integer		Hardware/Board revision.

dig1:SLOT		integer		VME slot the board is sitting in 
							(1-based, i.e., the leftmost slot in
							the crate is slot 1).

dig1:SLOT		integer		VME slot the board is sitting in 

dig1:PGA		enum/menu	Selects ADC input range 
								'2.25Vpp' (numerical: 0)
								'1.5Vpp'  (numerical: 1)

dig1:ASTA		integer		Reads acquisition status register.
							PV updates after each completed
							acquisition or change of the waveform.
							Can enforce updating by scanning
							(e.g., writing .PROC).

							NOTE: Arming the digitizer (including
								the 'auto-rearm' feature) resets ASTA.

dig1:ISTA		integer		LATCHED contents of IRQ status
							register. After every IRQ the ISR merges
							(ORs) the currently set bits from IRQ status
							into ISTA (ISR clears pending IRQs from 
							status reg).

dig1:ISTARST	integer		write 0 to clear ISTA.

dig1:ISTAHW		integer		contents of the IRQ status register;
							PV updates every second.
							NOTE: this PV probably always reads 0
								because the ISR clears pending
								interrupts. Can provide info if,
								for some reason the ISR doesn't execute.

di0:port0:in0	integer		RF Detector/Comparator Status

do0:port0:out0	integer		RF Detector/Comparator Resync control

do0:port0:out1	integer		RF Attentuator Control 1

do0:port0:out2	integer		RF Attentuator Control 2

do0:port0:out3	integer		RF Attentuator Control 3

do0:port0:out4	integer		RF Attentuator Control 4

ao0:port0:out0	float		Phase Shifter I/Q Control 1

ao0:port0:out1	float		Phase Shifter I/Q Control 2

