#!/bin/sh
# This script can be copied in /etc/init.d to automatically start
# a gateway.
# Before using this script you must configure /etc/sysconfig/epics-gateway
### BEGIN INIT INFO
# Provides: epics-gateway
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Should-Start:
# Required-Start: $network $autofs
# Required-Stop:
# Short-Description: Start and stop the EPICS gateway
### END INIT INFO
# chkconfig: - 99 0

COMMAND=$1

. /etc/init.d/functions
if [ "X${COMMAND}" == "Xstart" ]; then
	echo -ne "Starting EPICS gateway"
elif [ "X${COMMAND}" == "Xstop" ]; then
	echo -ne "Stopping EPICS gateway"
elif [ "X${COMMAND}" == "Xstatus" ]; then
	echo -ne "Checking EPICS gateway"
else
	echo -ne "Unrecognized command ${COMMAND}.\n"
fi

if [ ! -r /etc/sysconfig/epics-gateway.cfg ]; then
	failure
	echo -ne "\nCould not find configuration file /etc/sysconfig/epics-gateway.cfg\n"
	exit 1
fi
. /etc/sysconfig/epics-gateway.cfg

RETVAL=0

# Source the EPICS environment
EPICS_SITE_CONFIG=${EPICSGW_RELEASE_SITE}
if [ ! -r $(dirname ${EPICS_SITE_CONFIG})/tools/current/bin/iocenv.sh ]; then
	failure
	echo -ne "\nCould not find iocenv.sh.\n"
	exit 1
fi
source $(dirname ${EPICS_SITE_CONFIG})/tools/current/bin/iocenv.sh
# Look up the Gateway installation path
load_epics_config_var GATEWAY

for subnet in ${EPICSGW_NETWORKS_LIST}; do
	${GATEWAY}/bin/gateway.sh ${COMMAND} ${subnet} &> /dev/null
	FAILED=$?
	if [ $((FAILED)) -ne 0 ]; then
		if [ "X${COMMAND}" != "Xstatus" ]; then
			echo -ne "\nfailed to ${COMMAND} ${subnet} gateway."
		fi
		RETVAL=${FAILED}
	fi
done

if [ $((RETVAL)) -ne 0 ]; then
	failure
else
	success
fi
echo
exit ${RETVAL}
